{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Lambda stuff to fetch post size info",
    "Parameters": {
        "SlackToken": {
            "Description": "Slack API token",
            "Type": "String"
        },
    },
    "Resources": {
        "DataFetcher": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Description": "Fetch size info and post to slack",
                "Handler": "index.handler",
                "MemorySize": "512",
                "Timeout": "300",
                "Role": {
                    "Fn::GetAtt": [
                        "ExecutionRole",
                        "Arn"
                    ]
                },
                "Code": {
                    "ZipFile": "$TEMPLATE_BODY_PLACEHOLDER"
                },
                "Runtime": "python3.7",
                "Environment": {
                    "Variables": {
                        "SLACK_TOKEN": {
                            "Ref": "SlackToken"
                        }
                    }
                }
            }
        },
        "CronRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
                "Description": "Schedules running of lambda data fetcher",
                "Name": "BabyCron",
                "ScheduleExpression": "cron(0 10 ? * 2 *)",
                "Targets": [
                    {
                        "Id": "CronScheduler",
                        "Arn": {
                            "Fn::GetAtt": [
                                "DataFetcher",
                                "Arn"
                            ]
                        }
                    }
                ]
            }
        },
        "InvokeLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "FunctionName": {
                    "Fn::GetAtt": [
                        "DataFetcher",
                        "Arn"
                    ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "events.amazonaws.com",
                "SourceArn": {
                    "Fn::GetAtt": [
                        "CronRule",
                        "Arn"
                    ]
                }
            }
        },
        "ExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": "lambda.amazonaws.com"
                        },
                        "Action": "sts:AssumeRole"
                    }
                },
                "Policies": [
                    {
                        "PolicyName": "LogStuff",
                        "PolicyDocument": {
                            "Statement": {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:CreateLogGroup",
                                    "logs:CreateLogStream",
                                    "logs:PutLogEvents",
                                    "logs:DescribeLogStreams"
                                ],
                                "Resource": [
                                    "arn:aws:logs:*:*:*"
                                ]
                            }
                        }
                    }
                ]
            }
        }
    },
    "Outputs": {
        "DataFetcherLambda": {
            "Description": "Name of the lambda function to fetch and post size",
            "Value": {
                "Ref": "DataFetcher"
            }
        }
    }
}
